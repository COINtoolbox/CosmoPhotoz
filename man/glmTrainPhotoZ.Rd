% Generated by roxygen2 (4.0.1): do not edit by hand
\name{glmTrainPhotoZ}
\alias{glmTrainPhotoZ}
\title{Fit a GLM for photometric redshift estimation}
\usage{
glmTrainPhotoZ(x, formula=NULL, method=c("Frequentist","Bayesian"), family=c("gamma","inverse.gaussian"))
}
\arguments{
\item{x}{a data.frame containing the data to train the model}

\item{formula}{an object of class "formula" to be adopted}

\item{method}{a string containing the chosen GLM method. Two options are available: \code{Frequentist} will use the function  \code{\link{glm}} from the package \code{stats}; \code{Bayesian} will use the function \code{\link{bayesglm}} from the package  \code{arm}.}

\item{family}{a string containing \code{gamma} or \code{inverse.gaussian} (a description of the error distribution and link function to be used in the model).}
}
\value{
a trainned GLM object containing the fit of the model
}
\description{
\code{glmTrainPhotoZ} trains a generalized linear model for
photometric redshift estimation.
}
\examples{
\dontrun{
# First, load the test and train data
packagePath <- paste(find.package("CosmoPhotoz"),"/extdata/",sep="")
trainData <- read.table(file=paste(packagePath, "sdss-ugriz-train.dat", sep=""), header=FALSE)
testData <-  read.table(file=paste(packagePath, "sdss-ugriz-test.dat", sep=""), header=FALSE)
trainData <- trainData[,c(1:5,11)] # Select the relevant data (photometry and spectroscopic redshift)
testData <- testData[,c(1:5,11)]   # Select the relevant data (photometry and spectroscopic redshift)
colnames(trainData) <- c("u", "g", "r", "i", "z", "redshift")
colnames(testData) <- c("u", "g", "r", "i", "z", "redshift")

# Combine the training and test data and calculate the principal components
PC_comb <- computeCombPCA(subset(trainData, select=c(-redshift)), subset(testData,  select=c(-redshift)))
Trainpc <- cbind(PC_comb$x, redshift=testData$redshift)
Testpc <- PC_comb$y

# Dynamic generation of the formula based on the user selected number of PCs
nPcs <- 4 ## THE NUMBER OF PCS USED ENTER HERE
formM <- paste(names(PC_comb$x[1:nPcs]), collapse="*")
formM <- paste("redshift~",formM, sep="")

# Fitting
Fit <- glmTrainPhotoZ(Trainpc, formula=eval(parse(text=formM)), method="Bayesian" , family="gamma")

# Photo-z estimation
photoz <- predict(Fit$glmfit, newdata=Testpc, type="response")
specz <- PHAT0test$redshift
}
}
\author{
Rafael S. de Souza, Alberto Krone-Martins
}
\keyword{utilities}

